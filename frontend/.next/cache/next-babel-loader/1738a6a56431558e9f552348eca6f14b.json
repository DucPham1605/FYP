{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ducp1\\\\Desktop\\\\journalProject\\\\frontend\\\\components\\\\RegisterComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nvar RegisterComponent = function RegisterComponent() {\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    loading: false,\n    message: '',\n    //show User success message\n    showForm: true //hide the form when user created account\n\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; //grab values as user type,grab value from the state and set input component\n\n\n  var name = values.name,\n      email = values.email,\n      password = values.password,\n      error = values.error,\n      loading = values.loading,\n      message = values.message,\n      showForm = values.showForm;\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    console.log('handleSubmit');\n  }; //in4 from state is submitted to backend\n\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues.apply(void 0, _toConsumableArray(values));\n    };\n  }; //event value will be taken to the state \n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"formControl\",\n      placeholder: \"Your name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"formControl\",\n      placeholder: \"Your email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"formControl\",\n      placeholder: \"Your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Register\")));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, registerForm());\n};\n\nexport default RegisterComponent;","map":{"version":3,"sources":["C:/Users/ducp1/Desktop/journalProject/frontend/components/RegisterComponent.js"],"names":["useState","RegisterComponent","name","email","password","error","loading","message","showForm","values","setValues","handleSubmit","event","preventDefault","console","log","handleChange","registerForm"],"mappings":";;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA,kBACJD,QAAQ,CAAC;AACnCE,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAC,EAF6B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,KAAK,EAAE,EAJ4B;AAKnCC,IAAAA,OAAO,EAAE,KAL0B;AAMnCC,IAAAA,OAAO,EAAE,EAN0B;AAMpB;AACfC,IAAAA,QAAQ,EAAE,IAPyB,CAOnB;;AAPmB,GAAD,CADJ;AAAA,MACxBC,MADwB;AAAA,MACjBC,SADiB,iBAW/B;;;AAX+B,MAaxBR,IAbwB,GAa8BO,MAb9B,CAaxBP,IAbwB;AAAA,MAanBC,KAbmB,GAa8BM,MAb9B,CAanBN,KAbmB;AAAA,MAabC,QAba,GAa8BK,MAb9B,CAabL,QAba;AAAA,MAaJC,KAbI,GAa8BI,MAb9B,CAaJJ,KAbI;AAAA,MAaEC,OAbF,GAa8BG,MAb9B,CAaEH,OAbF;AAAA,MAaUC,OAbV,GAa8BE,MAb9B,CAaUF,OAbV;AAAA,MAakBC,QAblB,GAa8BC,MAb9B,CAakBD,QAblB;;AAe/B,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,GAHD,CAf+B,CAmB/B;;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAd,IAAI;AAAA,WAAI,UAAAU,KAAK,EAAI;AACrCF,MAAAA,SAAS,MAAT,4BAAaD,MAAb;AACA,KAFwB;AAAA,GAAzB,CArB+B,CAwB/B;;;AAEA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC3B,WACC;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,KAAK,EAAET,IAAd;AAAoB,MAAA,QAAQ,EAAEc,YAAY,CAAC,MAAD,CAA1C;AAAoD,MAAA,IAAI,EAAC,MAAzD;AAAgE,MAAA,SAAS,EAAC,aAA1E;AAAwF,MAAA,WAAW,EAAC,WAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA,EAIA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,KAAK,EAAEb,KAAd;AAAqB,MAAA,QAAQ,EAAEa,YAAY,CAAC,OAAD,CAA3C;AAAsD,MAAA,IAAI,EAAC,OAA3D;AAAmE,MAAA,SAAS,EAAC,aAA7E;AAA2F,MAAA,WAAW,EAAC,YAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJA,EAOA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,KAAK,EAAEZ,QAAd;AAAwB,MAAA,QAAQ,EAAEY,YAAY,CAAC,UAAD,CAA9C;AAA4D,MAAA,IAAI,EAAC,UAAjE;AAA4E,MAAA,SAAS,EAAC,aAAtF;AAAoG,MAAA,WAAW,EAAC,eAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CAVA,CADD;AAgBC,GAjBD;;AAmBA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,YAAY,EADb,CADD;AAKA,CAlDD;;AAoDA,eAAehB,iBAAf","sourcesContent":["import {useState} from 'react'\r\n\r\nconst RegisterComponent = () => {\r\n\tconst [values,setValues] = useState({\r\n\t\tname: '',\r\n\t\temail:'',\r\n\t\tpassword: '',\r\n\t\terror: '',\r\n\t\tloading: false,\r\n\t\tmessage: '', \t\t//show User success message\r\n\t\tshowForm: true\t\t//hide the form when user created account\r\n\t})\r\n\r\n\t//grab values as user type,grab value from the state and set input component\r\n\r\n\tconst {name,email,password,error,loading,message,showForm} = values;\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconsole.log('handleSubmit')\r\n\t}\r\n\t//in4 from state is submitted to backend\r\n\r\n\tconst handleChange = name => event => {\r\n\t\tsetValues(...values,)\r\n\t}\r\n\t//event value will be taken to the state \r\n\r\n\tconst registerForm = () => {\r\n\treturn(\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={name} onChange={handleChange('name')} type=\"text\" className=\"formControl\" placeholder=\"Your name\" /> \r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={email} onChange={handleChange('email')} type=\"email\" className=\"formControl\" placeholder=\"Your email\" /> \r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={password} onChange={handleChange('password')} type=\"password\" className=\"formControl\" placeholder=\"Your password\" /> \r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button className=\"btn btn-primary\">Register</button>\r\n\t\t</div>\r\n\t\t</form>\r\n\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t{registerForm()}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterComponent\r\n"]},"metadata":{},"sourceType":"module"}