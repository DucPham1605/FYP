{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { isLoggedIn } from './handleCookie'; //get member profile\n\nexport const getProfile = token => {\n  let endPoint;\n\n  if (isLoggedIn() && isLoggedIn().role === \"admin\") {\n    endPoint = `${API}/admin/profile`;\n  } else if (isLoggedIn() && isLoggedIn().role === \"member\") {\n    endPoint = `${API}/member/profile`;\n  }\n\n  return fetch(endPoint, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n};\nexport const updateProfile = (token, member) => {\n  return fetch(`${API}/member/update`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: member\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n};\nexport const getProfileAndJournal = token => {\n  return fetch(`${API}/member/profile/journal`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n};","map":{"version":3,"sources":["D:/journalProject/frontend/actions/member.js"],"names":["fetch","API","isLoggedIn","getProfile","token","endPoint","role","method","headers","Accept","Authorization","then","response","json","catch","error","console","log","updateProfile","member","body","getProfileAndJournal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,SAAQC,UAAR,QAAyB,gBAAzB,C,CAIA;;AACA,OAAO,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAElC,MAAIC,QAAJ;;AAEC,MAAGH,UAAU,MAAMA,UAAU,GAAGI,IAAb,KAAsB,OAAzC,EAAiD;AAChDD,IAAAA,QAAQ,GAAI,GAAEJ,GAAI,gBAAlB;AACA,GAFD,MAEO,IAAGC,UAAU,MAAMA,UAAU,GAAGI,IAAb,KAAsB,QAAzC,EAAkD;AACxDD,IAAAA,QAAQ,GAAI,GAAEJ,GAAI,iBAAlB;AACA;;AAEF,SAAOD,KAAK,CAACK,QAAD,EAAU;AACrBE,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAERC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAFvB;AAFY,GAAV,CAAL,CAONO,IAPM,CAODC,QAAQ,IAAE;AACf,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GATM,EAUNC,KAVM,CAUAC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVT,CAAP;AAWA,CArBM;AAwBP,OAAO,MAAMG,aAAa,GAAG,CAACd,KAAD,EAAOe,MAAP,KAAkB;AAC9C,SAAOnB,KAAK,CAAE,GAAEC,GAAI,gBAAR,EAAwB;AACnCM,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAERC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAFvB,KAF0B;AAMnCgB,IAAAA,IAAI,EAAED;AAN6B,GAAxB,CAAL,CAQNR,IARM,CAQDC,QAAQ,IAAE;AACf,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GAVM,EAWNC,KAXM,CAWAC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXT,CAAP;AAYA,CAbM;AAgBP,OAAO,MAAMM,oBAAoB,GAAGjB,KAAK,IAAI;AAC5C,SAAOJ,KAAK,CAAE,GAAEC,GAAI,yBAAR,EAAiC;AAC5CM,IAAAA,MAAM,EAAE,KADoC;AAE5CC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAERC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAFvB;AAFmC,GAAjC,CAAL,CAONO,IAPM,CAODC,QAAQ,IAAI;AACjB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GATM,EAUNC,KAVM,CAUAC,KAAK,IAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVP,CAAP;AAWA,CAZM","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\nimport {isLoggedIn} from './handleCookie'\r\n\r\n\r\n\r\n//get member profile\r\nexport const getProfile = token => {\r\n\r\n\tlet endPoint \r\n\r\n\t if(isLoggedIn() && isLoggedIn().role === \"admin\"){\r\n\t \tendPoint = `${API}/admin/profile`\r\n\t } else if(isLoggedIn() && isLoggedIn().role === \"member\"){\r\n\t \tendPoint = `${API}/member/profile`\r\n\t }\r\n\r\n\treturn fetch(endPoint,{\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t.then(response=>{\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error => console.log(error))\r\n}\r\n\r\n\r\nexport const updateProfile = (token,member) => {\r\n\treturn fetch(`${API}/member/update`,{\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: member\r\n\t})\r\n\t.then(response=>{\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error => console.log(error))\r\n}\r\n\r\n\r\nexport const getProfileAndJournal = token => {\r\n\treturn fetch(`${API}/member/profile/journal`,{\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error=>console.log(error))\r\n}"]},"metadata":{},"sourceType":"module"}