{"ast":null,"code":"var _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\components\\\\RegisterComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { validateAccount } from '../actions/auth';\nimport Router from 'next/router';\n\nconst RegisterComponent = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    loading: false,\n    message: '',\n    //show User success message\n    displayForm: true //hide the form when user created account\n\n  }); //grab values as user type,grab value from the state and set input component\n\n  const {\n    name,\n    email,\n    password,\n    error,\n    loading,\n    message,\n    displayForm\n  } = values;\n\n  const handleSubmit = event => {\n    event.preventDefault(); // console.table({ name, email, password, error, loading, message, showForm });\n\n    setValues(_objectSpread({}, values, {\n      loading: true,\n      error: false\n    }));\n    const member = {\n      name,\n      email,\n      password\n    }; //submit member info to the database\n\n    validateAccount(member).then(member => {\n      if (member.error) {\n        setValues(_objectSpread({}, values, {\n          error: member.error,\n          loading: false\n        }));\n        console.log(message.error);\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: '',\n          email: '',\n          password: '',\n          error: '',\n          loading: false,\n          message: member.message,\n          displayForm: false\n        }));\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const displayLoadingStatus = () => loading ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Loading.....\") : '';\n\n  const displayError = () => error ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, error) : '';\n\n  const displayMessage = () => message ? __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, message) : '';\n\n  const registerForm = () => {\n    if (displayForm) return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Your name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Your email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary offset-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Register\")));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, displayError(), displayMessage(), displayLoadingStatus(), registerForm());\n};\n\nexport default RegisterComponent;","map":{"version":3,"sources":["D:/journalProject/frontend/components/RegisterComponent.js"],"names":["useState","validateAccount","Router","RegisterComponent","values","setValues","name","email","password","error","loading","message","displayForm","handleSubmit","event","preventDefault","member","then","console","log","handleChange","target","value","displayLoadingStatus","displayError","displayMessage","registerForm"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport {validateAccount} from '../actions/auth'\r\nimport Router from 'next/router'\r\n\r\nconst RegisterComponent = () => {\r\n\tconst [values,setValues] = useState({\r\n\t\tname: '',\r\n\t\temail:'',\r\n\t\tpassword: '',\r\n\t\terror: '',\r\n\t\tloading: false,\r\n\t\tmessage: '', \t\t//show User success message\r\n\t\tdisplayForm: true\t\t//hide the form when user created account\r\n\t})\r\n\r\n\t//grab values as user type,grab value from the state and set input component\r\n\r\n\tconst {name,email,password,error,loading,message,displayForm} = values;\r\n\r\n\tconst handleSubmit = event => {\r\n        event.preventDefault();\r\n        // console.table({ name, email, password, error, loading, message, showForm });\r\n        setValues({ ...values, loading: true, error: false });\r\n        const member = { name, email, password };\r\n\r\n        //submit member info to the database\r\n        validateAccount(member).then(member => {\r\n            if (member.error) {\r\n                setValues({ ...values, error: member.error, loading: false });\r\n                console.log(message.error)\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    loading: false,\r\n                    message: member.message,\r\n                    displayForm: false\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\tconst handleChange = name => event => {\r\n\t\tsetValues({...values,[name]: event.target.value})\r\n\t}\r\n\r\n\tconst displayLoadingStatus = () => (loading ? <div>Loading.....</div> : '');\r\n\tconst displayError = () => (error ? <div className=\"alert alert-danger\">{error}</div> : '');\r\n\tconst displayMessage = () => (message ? <div className=\"alert alert-success\">{message}</div> : '');\r\n\r\n\r\n\tconst registerForm = () => {\r\n\tif(displayForm)\r\n\treturn(\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={name} onChange={handleChange('name')} type=\"text\" className=\"form-control\" placeholder=\"Your name\" /> \r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={email} onChange={handleChange('email')} type=\"email\" className=\"form-control\" placeholder=\"Your email\" /> \r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={password} onChange={handleChange('password')} type=\"password\" className=\"form-control\" placeholder=\"Your password\" /> \r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button className=\"btn btn-primary offset-md-6\">Register</button>\r\n\t\t</div>\r\n\t\t</form>\r\n\t) \r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{displayError()}\r\n\t\t\t{displayMessage()}\r\n\t\t\t{displayLoadingStatus()}\r\n\t\t\t{registerForm()}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterComponent\r\n"]},"metadata":{},"sourceType":"module"}