{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const register = member => {\n  return fetch(`${API}/register`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(member)\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n}; //make request to backend, backend create new user and response in JSON format\n\nexport const login = member => {\n  return fetch(`${API}/login`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(member)\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n}; //cookies and localstorage\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; // localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('member', data.member);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('member')) {\n        return JSON.parse(localStorage.getItem('member'));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const updateUser = (user, next) => {\n  if (false) {\n    if (localStorage.getItem('member')) {\n      let auth = JSON.parse(localStorage.getItem('member'));\n      auth = user;\n      localStorage.setItem('member', JSON.stringify(auth));\n      next();\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ducp1/Desktop/journalProject/frontend/actions/auth.js"],"names":["fetch","API","cookie","register","member","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","console","log","login","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","parse","updateUser","user","auth"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\nimport cookie from 'js-cookie'\r\n\r\nexport const register = member => {\r\n\treturn fetch(`${API}/register`,{\r\n\t\tmethod: 'POST',\r\n\t\theaders : {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(member)\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error => console.log(error))\r\n}\r\n//make request to backend, backend create new user and response in JSON format\r\n\r\nexport const login = member => {\r\n\treturn fetch(`${API}/login`,{\r\n\t\tmethod: 'POST',\r\n\t\theaders : {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(member)\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error => console.log(error))\r\n}\r\n\r\n\r\n\r\n//cookies and localstorage\r\n\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n// get cookie\r\nexport const getCookie = key => {\r\n    if (process.browser) {\r\n        return cookie.get(key);\r\n    }\r\n};\r\n// localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if (process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const removeLocalStorage = key => {\r\n    if (process.browser) {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n// autheticate user by pass data to cookie and localstorage\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token', data.token);\r\n    setLocalStorage('member', data.member);\r\n    next();\r\n};\r\n\r\nexport const isAuth = () => {\r\n    if (process.browser) {\r\n        const cookieChecked = getCookie('token');\r\n        if (cookieChecked) {\r\n            if (localStorage.getItem('member')) {\r\n                return JSON.parse(localStorage.getItem('member'));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateUser = (user, next) => {\r\n    if (process.browser) {\r\n        if (localStorage.getItem('member')) {\r\n            let auth = JSON.parse(localStorage.getItem('member'));\r\n            auth = user;\r\n            localStorage.setItem('member', JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}