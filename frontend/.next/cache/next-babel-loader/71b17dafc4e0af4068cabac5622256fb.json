{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport queryString from 'query-string';\nimport { isLoggedIn, handleTokenExpiry } from './handleCookie';\nexport var listJournals = function listJournals(skip, limit) {\n  //skip and limit are sent from client side\n  var data = {\n    skip: skip,\n    limit: limit\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var createJournal = function createJournal(journal, token) {\n  var endPoint;\n\n  if (isLoggedIn() && isLoggedIn().role === \"admin\") {\n    endPoint = \"\".concat(API, \"/journal\");\n  } else if (isLoggedIn() && isLoggedIn().role === \"member\") {\n    endPoint = \"\".concat(API, \"/member/journal\");\n  }\n\n  return fetch(\"\".concat(endPoint), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: journal\n  }).then(function (response) {\n    handleTokenExpiry(response);\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var readJournal = function readJournal(slug) {\n  return fetch(\"\".concat(API, \"/journal/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var listRelatedJournal = function listRelatedJournal(journal) {\n  //skip and limit are sent from client side\n  return fetch(\"\".concat(API, \"/journals/relatedJournal\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(journal)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var deleteJournal = function deleteJournal(slug, token) {\n  var endPoint;\n\n  if (isLoggedIn() && isLoggedIn().role === \"admin\") {\n    endPoint = \"\".concat(API, \"/journal/\").concat(slug);\n  } else if (isLoggedIn() && isLoggedIn().role === \"member\") {\n    endPoint = \"\".concat(API, \"/member/journal/\").concat(slug);\n  }\n\n  return fetch(endPoint, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    handleTokenExpiry(response);\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var updateJournal = function updateJournal(journal, token, slug) {\n  var endPoint;\n\n  if (isLoggedIn() && isLoggedIn().role === \"admin\") {\n    endPoint = \"\".concat(API, \"/journal/\").concat(slug);\n  } else if (isLoggedIn() && isLoggedIn().role === \"member\") {\n    endPoint = \"\".concat(API, \"/member/journal/\").concat(slug);\n  }\n\n  return fetch(endPoint, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: journal\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n}; //send params from frontend\n\nexport var listSearch = function listSearch(params) {\n  console.log('search params', params); //assumption: params is an object\n\n  var query = queryString.stringify(params);\n  console.log('query params', query); //query = object stringified \n\n  return fetch(\"\".concat(API, \"/journals/search?\").concat(query), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var listJournalForManage = function listJournalForManage(username) {\n  return fetch(\"\".concat(API, \"/\").concat(username, \"/journals\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};","map":{"version":3,"sources":["D:/journalProject/frontend/actions/journal.js"],"names":["fetch","API","queryString","isLoggedIn","handleTokenExpiry","listJournals","skip","limit","data","method","headers","Accept","body","then","response","json","error","console","log","createJournal","journal","token","endPoint","role","Authorization","readJournal","slug","listRelatedJournal","deleteJournal","updateJournal","listSearch","params","query","stringify","listJournalForManage","username"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport queryString from 'query-string'\r\nimport {isLoggedIn,handleTokenExpiry} from './handleCookie'\r\n\r\nexport const listJournals = (skip,limit) => {\r\n    //skip and limit are sent from client side\r\n    const data = {\r\n        skip,\r\n        limit\r\n    }\r\n\r\n    return fetch(`${API}/blogs-categories-tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)   \r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};\r\n\r\nexport const createJournal = (journal, token) => {\r\n\r\n    let endPoint \r\n\r\n    if(isLoggedIn() && isLoggedIn().role === \"admin\"){\r\n        endPoint = `${API}/journal`\r\n    } else if (isLoggedIn() && isLoggedIn().role === \"member\"){\r\n        endPoint = `${API}/member/journal`\r\n    }\r\n\r\n    return fetch(`${endPoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: journal\r\n    })\r\n        .then(response => {\r\n            handleTokenExpiry(response)\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};\r\n\r\n\r\n\r\n\r\nexport const readJournal = slug => {\r\n    return fetch(`${API}/journal/${slug}`,{\r\n        method: 'GET'\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\nexport const listRelatedJournal = (journal) => {\r\n    //skip and limit are sent from client side\r\n\r\n    return fetch(`${API}/journals/relatedJournal`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(journal)   \r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};\r\n\r\nexport const deleteJournal = (slug,token) => {\r\n\r\n    let endPoint\r\n\r\n    if(isLoggedIn() && isLoggedIn().role === \"admin\"){\r\n        endPoint = `${API}/journal/${slug}`\r\n    } else if (isLoggedIn() && isLoggedIn().role === \"member\") {\r\n        endPoint = `${API}/member/journal/${slug}`\r\n    }\r\n    \r\n    return fetch(endPoint,{\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}` \r\n        }\r\n    })\r\n    .then(response=>{\r\n        handleTokenExpiry(response)\r\n        return response.json()\r\n    })\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nexport const updateJournal = (journal,token,slug) => {\r\n\r\n    let endPoint\r\n\r\n    if(isLoggedIn() && isLoggedIn().role === \"admin\"){\r\n        endPoint = `${API}/journal/${slug}`\r\n    } else if (isLoggedIn() && isLoggedIn().role === \"member\") {\r\n        endPoint = `${API}/member/journal/${slug}`\r\n    }\r\n\r\n    return fetch(endPoint, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: journal\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};\r\n\r\n//send params from frontend\r\nexport const listSearch = (params) => {\r\n    console.log('search params',params) //assumption: params is an object\r\n    let query = queryString.stringify(params)   \r\n    console.log('query params',query)   //query = object stringified \r\n\r\n    return fetch(`${API}/journals/search?${query}`,{\r\n        method: 'GET'\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(error=> console.log(error))\r\n}\r\n\r\nexport const listJournalForManage = (username) => {\r\n\r\n    return fetch(`${API}/${username}/journals`,{\r\n        method: 'GET'\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}