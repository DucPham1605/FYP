{"ast":null,"code":"var _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\pages\\\\password\\\\reset\\\\[token].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { withRouter } from 'next/router';\nimport Layout from '../../../components/Layout';\nimport { resetPassword } from '../../../actions/auth';\n\nconst ResetPassword = ({\n  router\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n    message: \"\",\n    error: \"\",\n    isSent: false\n  });\n  const {\n    newPassword,\n    confirmPassword,\n    message,\n    error,\n    isSent\n  } = values;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const resetPasswordLink = router.query.token;\n\n    if (newPassword === confirmPassword) {\n      resetPassword({\n        resetPasswordLink,\n        newPassword\n      }).then(data => {\n        if (data.error) {\n          setValues(_objectSpread({}, values, {\n            error: data.error\n          }));\n        } else {\n          setValues(_objectSpread({}, values, {\n            message: data.message,\n            newPassword: \"\",\n            confirmPassword: \"\",\n            isSent: true\n          }));\n        }\n      });\n    } else {\n      setValues(_objectSpread({}, values, {\n        error: \"Password is not match, please confirm your password again\",\n        isSent: false\n      }));\n    }\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      [name]: e.target.value,\n      error: \"\"\n    }));\n  };\n\n  const showStatus = () => {\n    if (error) {\n      return __jsx(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, error);\n    } else if (isSent) {\n      return __jsx(\"div\", {\n        className: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, message);\n    }\n  };\n\n  const showResetForm = () => {\n    if (!isSent) {\n      return __jsx(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group pt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        onChange: handleChange(\"newPassword\"),\n        className: \"form-control\",\n        value: newPassword,\n        type: \"password\",\n        placeholder: \"Enter your new password here\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"form-group pt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        onChange: handleChange(\"confirmPassword\"),\n        className: \"form-control\",\n        value: confirmPassword,\n        type: \"password\",\n        placeholder: \"Confirm your new password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Change your password\")));\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Reset Password\"), showStatus(), showResetForm()));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["D:/journalProject/frontend/pages/password/reset/[token].js"],"names":["useState","withRouter","Layout","resetPassword","ResetPassword","router","values","setValues","newPassword","confirmPassword","message","error","isSent","handleSubmit","e","preventDefault","resetPasswordLink","query","token","then","data","handleChange","name","target","value","showStatus","showResetForm"],"mappings":";;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAEpC,QAAM;AAAA,OAACC,MAAD;AAAA,OAAQC;AAAR,MAAqBP,QAAQ,CAAC;AACnCQ,IAAAA,WAAW,EAAC,EADuB;AAEnCC,IAAAA,eAAe,EAAC,EAFmB;AAGnCC,IAAAA,OAAO,EAAC,EAH2B;AAInCC,IAAAA,KAAK,EAAC,EAJ6B;AAKnCC,IAAAA,MAAM,EAAE;AAL2B,GAAD,CAAnC;AAQA,QAAM;AAACJ,IAAAA,WAAD;AAAaC,IAAAA,eAAb;AAA6BC,IAAAA,OAA7B;AAAqCC,IAAAA,KAArC;AAA2CC,IAAAA;AAA3C,MAAqDN,MAA3D;;AAEA,QAAMO,YAAY,GAAGC,CAAC,IAAG;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,iBAAiB,GAAGX,MAAM,CAACY,KAAP,CAAaC,KAAvC;;AACA,QAAGV,WAAW,KAAKC,eAAnB,EAAmC;AAClCN,MAAAA,aAAa,CAAC;AAACa,QAAAA,iBAAD;AAAmBR,QAAAA;AAAnB,OAAD,CAAb,CAA+CW,IAA/C,CAAoDC,IAAI,IAAE;AACzD,YAAGA,IAAI,CAACT,KAAR,EAAc;AACbJ,UAAAA,SAAS,mBAAKD,MAAL;AAAYK,YAAAA,KAAK,EAACS,IAAI,CAACT;AAAvB,aAAT;AACA,SAFD,MAEO;AACNJ,UAAAA,SAAS,mBAAKD,MAAL;AAAYI,YAAAA,OAAO,EAACU,IAAI,CAACV,OAAzB;AAAiCF,YAAAA,WAAW,EAAC,EAA7C;AAAgDC,YAAAA,eAAe,EAAC,EAAhE;AAAmEG,YAAAA,MAAM,EAAE;AAA3E,aAAT;AACA;AACD,OAND;AAOA,KARD,MASK;AACJL,MAAAA,SAAS,mBAAKD,MAAL;AAAYK,QAAAA,KAAK,EAAE,2DAAnB;AAA+EC,QAAAA,MAAM,EAAE;AAAvF,SAAT;AACA;AACD,GAfD;;AAiBA,QAAMS,YAAY,GAAGC,IAAI,IAAIR,CAAC,IAAI;AACjCP,IAAAA,SAAS,mBAAKD,MAAL;AAAY,OAACgB,IAAD,GAAQR,CAAC,CAACS,MAAF,CAASC,KAA7B;AAAmCb,MAAAA,KAAK,EAAC;AAAzC,OAAT;AACA,GAFD;;AAIA,QAAMc,UAAU,GAAG,MAAM;AACxB,QAAGd,KAAH,EAAS;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCA,KAArC,CAAP;AACA,KAFF,MAEQ,IAAGC,MAAH,EAAW;AACjB,aAAO;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCF,OAAtC,CAAP;AACA;AACF,GAND;;AAQA,QAAMgB,aAAa,GAAG,MAAM;AAC3B,QAAG,CAACd,MAAJ,EAAW;AACV,aACC;AAAM,QAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,QAAQ,EAAEQ,YAAY,CAAC,aAAD,CADvB;AAEC,QAAA,SAAS,EAAC,cAFX;AAGC,QAAA,KAAK,EAAEb,WAHR;AAIC,QAAA,IAAI,EAAC,UAJN;AAKC,QAAA,WAAW,EAAC,8BALb;AAMC,QAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,EAYC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,QAAQ,EAAEa,YAAY,CAAC,iBAAD,CADvB;AAEC,QAAA,SAAS,EAAC,cAFX;AAGC,QAAA,KAAK,EAAEZ,eAHR;AAIC,QAAA,IAAI,EAAC,UAJN;AAKC,QAAA,WAAW,EAAC,2BALb;AAMC,QAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAZD,EAuBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,CAvBD,CADD;AA8BA;AACD,GAjCD;;AAmCA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEEgB,UAAU,EAFZ,EAGEC,aAAa,EAHf,CADD,CADD;AASC,CArFD;;AAuFA,eAAezB,UAAU,CAACG,aAAD,CAAzB","sourcesContent":["import {useState} from 'react'\r\nimport {withRouter} from 'next/router'\r\nimport Layout from '../../../components/Layout'\r\nimport {resetPassword} from '../../../actions/auth'\r\n\r\n\r\nconst ResetPassword = ({router}) => {\r\n\r\nconst [values,setValues] = useState({\r\n\tnewPassword:\"\",\r\n\tconfirmPassword:\"\",\r\n\tmessage:\"\",\r\n\terror:\"\",\r\n\tisSent: false\r\n})\r\n\r\nconst {newPassword,confirmPassword,message,error,isSent} = values\r\n\r\nconst handleSubmit = e =>{\r\n\te.preventDefault()\r\n\tconst resetPasswordLink = router.query.token\r\n\tif(newPassword === confirmPassword){\r\n\t\tresetPassword({resetPasswordLink,newPassword}).then(data=>{\r\n\t\t\tif(data.error){\r\n\t\t\t\tsetValues({...values,error:data.error,})\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({...values,message:data.message,newPassword:\"\",confirmPassword:\"\",isSent: true})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tsetValues({...values,error: \"Password is not match, please confirm your password again\",isSent: false})\r\n\t}\r\n}\r\n\r\nconst handleChange = name => e => {\r\n\tsetValues({...values,[name]: e.target.value,error:\"\"})\r\n}\r\n\r\nconst showStatus = () => {\r\n\tif(error){\r\n\t\t\treturn <div className=\"alert alert-danger\">{error}</div>\r\n\t\t} else if(isSent) {\r\n\t\t\treturn <div className=\"alert alert-success\">{message}</div>\r\n\t\t}\r\n}\r\n\r\nconst showResetForm = () => {\r\n\tif(!isSent){\r\n\t\treturn (\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group pt-4\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={handleChange(\"newPassword\")}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Enter your new password here\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group pt-4\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={handleChange(\"confirmPassword\")}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm your new password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className=\"btn btn-primary\">Change your password</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nreturn (\r\n\t<Layout>\r\n\t\t<div className=\"container\">\r\n\t\t\t<h3>Reset Password</h3>\r\n\t\t\t{showStatus()}\r\n\t\t\t{showResetForm()}\r\n\t\t</div>\r\n\t</Layout>\r\n)\r\n}\r\n\r\nexport default withRouter(ResetPassword)"]},"metadata":{},"sourceType":"module"}