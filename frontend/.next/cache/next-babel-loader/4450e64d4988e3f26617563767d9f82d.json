{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\pages\\\\password\\\\reset\\\\[token].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { withRouter } from 'next/router';\nimport Layout from '../../../components/Layout';\nimport { resetPassword } from '../../../actions/auth';\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var router = _ref.router;\n\n  var _useState = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n    message: \"\",\n    error: \"\",\n    isSent: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var newPassword = values.newPassword,\n      confirmPassword = values.confirmPassword,\n      message = values.message,\n      error = values.error,\n      isSent = values.isSent;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var resetPasswordLink = router.query.token;\n    var updateInfo = {\n      resetPasswordLink: resetPasswordLink,\n      newPassword: newPassword\n    };\n    console.log(updateInfo);\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setValues(_objectSpread({}, values, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.values), _defineProperty(_objectSpread2, \"error\", \"\"), _objectSpread2)));\n      console.log(e.target.value);\n    };\n  };\n\n  var showResetForm = function showResetForm() {\n    /*\tif(!isSent){*/\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      onChange: handleChange(\"newPassword\"),\n      className: \"form-control\",\n      value: newPassword,\n      type: \"password\",\n      placeholder: \"Enter your new password here\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      onChange: handleChange(\"confirmPassword\"),\n      className: \"form-control\",\n      value: confirmPassword,\n      type: \"password\",\n      placeholder: \"Confirm your new password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Change your password\")));\n    /*\t}*/\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Reset Password\"), showResetForm()));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["D:/journalProject/frontend/pages/password/reset/[token].js"],"names":["useState","withRouter","Layout","resetPassword","ResetPassword","router","newPassword","confirmPassword","message","error","isSent","values","setValues","handleSubmit","e","preventDefault","resetPasswordLink","query","token","updateInfo","console","log","handleChange","name","target","value","showResetForm"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport {withRouter} from 'next/router'\r\nimport Layout from '../../../components/Layout'\r\nimport {resetPassword} from '../../../actions/auth'\r\n\r\n\r\nconst ResetPassword = ({router}) => {\r\n\r\nconst [values,setValues] = useState({\r\n\tnewPassword:\"\",\r\n\tconfirmPassword:\"\",\r\n\tmessage:\"\",\r\n\terror:\"\",\r\n\tisSent: false\r\n})\r\n\r\nconst {newPassword,confirmPassword,message,error,isSent} = values\r\n\r\nconst handleSubmit = e =>{\r\n\te.preventDefault()\r\n\tconst resetPasswordLink = router.query.token\r\n\tconst updateInfo = {resetPasswordLink,newPassword}\r\n\tconsole.log(updateInfo)\r\n\r\n}\r\n\r\nconst handleChange = name => e => {\r\n\tsetValues({...values,[name]: e.target.values,error:\"\"})\r\n\tconsole.log(e.target.value)\r\n}\r\n\r\nconst showResetForm = () => {\r\n/*\tif(!isSent){*/\r\n\t\treturn (\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group pt-4\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={handleChange(\"newPassword\")}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Enter your new password here\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group pt-4\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={handleChange(\"confirmPassword\")}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm your new password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className=\"btn btn-primary\">Change your password</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</form>\r\n\t\t)\r\n/*\t}*/\r\n}\r\n\r\nreturn (\r\n\t<Layout>\r\n\t\t<div className=\"container\">\r\n\t\t\t<h3>Reset Password</h3>\r\n\t\t\t{showResetForm()}\r\n\t\t</div>\r\n\t</Layout>\r\n)\r\n}\r\n\r\nexport default withRouter(ResetPassword)"]},"metadata":{},"sourceType":"module"}