{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ducp1\\\\Desktop\\\\journalProject\\\\frontend\\\\components\\\\RegisterComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { register } from '.././actions/auth';\n\nvar RegisterComponent = function RegisterComponent() {\n  var _useState = useState({\n    name: 'Karl',\n    email: 'karlpham@gmail.com',\n    password: 'minhduc1605',\n    error: '',\n    loading: false,\n    message: '',\n    //show User success message\n    showForm: true //hide the form when user created account\n\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; //grab values as user type,grab value from the state and set input component\n\n\n  var name = values.name,\n      email = values.email,\n      password = values.password,\n      error = values.error,\n      loading = values.loading,\n      message = values.message,\n      showForm = values.showForm;\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault(); // console.table({ name, email, password, error, loading, message, showForm });\n\n    setValues(_objectSpread({}, values, {\n      loading: true,\n      error: false\n    }));\n    var member = {\n      name: name,\n      email: email,\n      password: password\n    }; //register member to the database\n\n    register(member).then(function (member) {\n      if (member.error) {\n        setValues(_objectSpread({}, values, {\n          error: member.error,\n          loading: false\n        }));\n        console.log(message.error);\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: '',\n          email: '',\n          password: '',\n          error: '',\n          loading: false,\n          message: member.message,\n          showForm: false\n        }));\n        console.log(member.message);\n      }\n    });\n  }; //in4 from state is submitted to backend\n\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread({}, values, _defineProperty({}, name, event.target.value)));\n    };\n  }; //event value will be taken to the state \n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"formControl\",\n      placeholder: \"Your name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"formControl\",\n      placeholder: \"Your email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"formControl\",\n      placeholder: \"Your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Register\")));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, registerForm());\n};\n\nexport default RegisterComponent;","map":{"version":3,"sources":["C:/Users/ducp1/Desktop/journalProject/frontend/components/RegisterComponent.js"],"names":["useState","register","RegisterComponent","name","email","password","error","loading","message","showForm","values","setValues","handleSubmit","event","preventDefault","member","then","console","log","handleChange","target","value","registerForm"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport {register} from '.././actions/auth'\r\n\r\nconst RegisterComponent = () => {\r\n\tconst [values,setValues] = useState({\r\n\t\tname: 'Karl',\r\n\t\temail:'karlpham@gmail.com',\r\n\t\tpassword: 'minhduc1605',\r\n\t\terror: '',\r\n\t\tloading: false,\r\n\t\tmessage: '', \t\t//show User success message\r\n\t\tshowForm: true\t\t//hide the form when user created account\r\n\t})\r\n\r\n\t//grab values as user type,grab value from the state and set input component\r\n\r\n\tconst {name,email,password,error,loading,message,showForm} = values;\r\n\r\n\tconst handleSubmit = event => {\r\n        event.preventDefault();\r\n        // console.table({ name, email, password, error, loading, message, showForm });\r\n        setValues({ ...values, loading: true, error: false });\r\n        const member = { name, email, password };\r\n\r\n        //register member to the database\r\n        register(member).then(member => {\r\n            if (member.error) {\r\n                setValues({ ...values, error: member.error, loading: false });\r\n                console.log(message.error)\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    loading: false,\r\n                    message: member.message,\r\n                    showForm: false\r\n                });\r\n                console.log(member.message)\r\n            }\r\n        });\r\n    };\r\n\t//in4 from state is submitted to backend\r\n\r\n\r\n\tconst handleChange = name => event => {\r\n\t\tsetValues({...values,/*error:false,*/[name]: event.target.value})\r\n\t}\r\n\t//event value will be taken to the state \r\n\r\n\r\n\tconst registerForm = () => {\r\n\treturn(\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={name} onChange={handleChange('name')} type=\"text\" className=\"formControl\" placeholder=\"Your name\" /> \r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={email} onChange={handleChange('email')} type=\"email\" className=\"formControl\" placeholder=\"Your email\" /> \r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<input value={password} onChange={handleChange('password')} type=\"password\" className=\"formControl\" placeholder=\"Your password\" /> \r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button className=\"btn btn-primary\">Register</button>\r\n\t\t</div>\r\n\t\t</form>\r\n\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t{registerForm()}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterComponent\r\n"]},"metadata":{},"sourceType":"module"}