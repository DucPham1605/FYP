{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { removeCookie, removeLocalStorage } from './handleCookie';\nimport Router from 'next/router'; //handle Token expiration\n\nexport var handleTokenExpiry = function handleTokenExpiry(response) {\n  //status 401 = unauthorized\n  if (response.status === 401) {\n    removeCookie('token');\n    removeLocalStorage('member');\n    Router.push({\n      pathname: '/signin',\n      query: {\n        message: 'Your session is expired. Please signin'\n      }\n    });\n  }\n};\nexport var register = function register(member) {\n  return fetch(\"\".concat(API, \"/register\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(member)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n}; //make request to backend, backend create new user and response in JSON format\n\nexport var login = function login(member) {\n  return fetch(\"\".concat(API, \"/login\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(member)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var logout = function logout(next) {\n  removeCookie('token');\n  removeLocalStorage('member');\n  next();\n  return fetch(\"{API}/logout\", {\n    method: 'GET'\n  }).then(function (response) {\n    console.log('Logged out successfully');\n  })[\"catch\"](function (error) {\n    return console.log(error);\n  });\n};\nexport var updateMember = function updateMember(member, next) {\n  //checking if is it in the client side\n  if (true) {\n    if (localStorage.getItem('member')) {\n      var oldMember = JSON.parse(localStorage.getItem('member'));\n      oldMember = member;\n      localStorage.setItem('member', _JSON$stringify(oldMember));\n      next();\n    }\n  }\n};","map":{"version":3,"sources":["D:/journalProject/frontend/actions/auth.js"],"names":["fetch","API","removeCookie","removeLocalStorage","Router","handleTokenExpiry","response","status","push","pathname","query","message","register","member","method","headers","Accept","body","then","json","error","console","log","login","logout","next","updateMember","localStorage","getItem","oldMember","JSON","parse","setItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,SAAQC,YAAR,EAAqBC,kBAArB,QAA8C,gBAA9C;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ,EAAI;AAC5C;AACA,MAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AAC1BL,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACAC,IAAAA,kBAAkB,CAAC,QAAD,CAAlB;AACAC,IAAAA,MAAM,CAACI,IAAP,CAAY;AACXC,MAAAA,QAAQ,EAAE,SADC;AAEXC,MAAAA,KAAK,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AAFI,KAAZ;AAMA;AACD,CAZM;AAcP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACjC,SAAOb,KAAK,WAAIC,GAAJ,gBAAmB;AAC9Ba,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAG;AACTC,MAAAA,MAAM,EAAE,kBADC;AAET,sBAAgB;AAFP,KAFoB;AAM9BC,IAAAA,IAAI,EAAE,gBAAeJ,MAAf;AANwB,GAAnB,CAAL,CAQNK,IARM,CAQD,UAAAZ,QAAQ,EAAI;AACjB,WAAOA,QAAQ,CAACa,IAAT,EAAP;AACA,GAVM,WAWA,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAXL,CAAP;AAYA,CAbM,C,CAcP;;AAEA,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAAAV,MAAM,EAAI;AAC9B,SAAOb,KAAK,WAAIC,GAAJ,aAAgB;AAC3Ba,IAAAA,MAAM,EAAE,MADmB;AAE3BC,IAAAA,OAAO,EAAG;AACTC,MAAAA,MAAM,EAAE,kBADC;AAET,sBAAgB;AAFP,KAFiB;AAM3BC,IAAAA,IAAI,EAAE,gBAAeJ,MAAf;AANqB,GAAhB,CAAL,CAQNK,IARM,CAQD,UAAAZ,QAAQ,EAAI;AACjB,WAAOA,QAAQ,CAACa,IAAT,EAAP;AACA,GAVM,WAWA,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAXL,CAAP;AAYA,CAbM;AAeP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAC/BvB,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAC,EAAAA,kBAAkB,CAAC,QAAD,CAAlB;AACAsB,EAAAA,IAAI;AAEJ,SAAOzB,KAAK,iBAAiB;AAC5Bc,IAAAA,MAAM,EAAE;AADoB,GAAjB,CAAL,CAGNI,IAHM,CAGD,UAAAZ,QAAQ,EAAG;AAChBe,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,GALM,WAMA,UAAAF,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GANL,CAAP;AAOA,CAZM;AAcP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACb,MAAD,EAAQY,IAAR,EAAiB;AAC5C;AACA,YAAmB;AAClB,QAAGE,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC;AACjC,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAhB;AACAC,MAAAA,SAAS,GAAGhB,MAAZ;AACAc,MAAAA,YAAY,CAACK,OAAb,CAAqB,QAArB,EAA8B,gBAAeH,SAAf,CAA9B;AACAJ,MAAAA,IAAI;AACJ;AACD;AACD,CAVM","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\nimport {removeCookie,removeLocalStorage} from './handleCookie'\r\nimport Router from 'next/router'\r\n\r\n//handle Token expiration\r\nexport const handleTokenExpiry = response => {\r\n\t//status 401 = unauthorized\r\n\tif(response.status === 401){\r\n\t\tremoveCookie('token')\r\n\t\tremoveLocalStorage('member')\r\n\t\tRouter.push({\r\n\t\t\tpathname: '/signin',\r\n\t\t\tquery: {\r\n\t\t\t\tmessage: 'Your session is expired. Please signin'\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const register = member => {\r\n\treturn fetch(`${API}/register`,{\r\n\t\tmethod: 'POST',\r\n\t\theaders : {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(member)\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error => console.log(error))\r\n}\r\n//make request to backend, backend create new user and response in JSON format\r\n\r\nexport const login = member => {\r\n\treturn fetch(`${API}/login`,{\r\n\t\tmethod: 'POST',\r\n\t\theaders : {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(member)\r\n\t})\r\n\t.then(response => {\r\n\t\treturn response.json()\r\n\t})\r\n\t.catch(error => console.log(error))\r\n}\r\n\r\nexport const logout = (next) => {\r\n\tremoveCookie('token')\r\n\tremoveLocalStorage('member')\r\n\tnext()\r\n\r\n\treturn fetch(`{API}/logout`, {\r\n\t\tmethod: 'GET'\r\n\t})\r\n\t.then(response =>{\r\n\t\tconsole.log('Logged out successfully')\r\n\t})\r\n\t.catch(error => console.log(error));\r\n}\r\n\r\nexport const updateMember = (member,next) => {\r\n\t//checking if is it in the client side\r\n\tif(process.browser){\r\n\t\tif(localStorage.getItem('member')){\r\n\t\t\tlet oldMember = JSON.parse(localStorage.getItem('member'))\r\n\t\t\toldMember = member\r\n\t\t\tlocalStorage.setItem('member',JSON.stringify(oldMember));\r\n\t\t\tnext()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}