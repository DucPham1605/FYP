{"ast":null,"code":"var _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\components\\\\Profile\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isLoggedIn } from '../../actions/handleCookie';\nimport { getProfile, updateProfile } from '../../actions/member';\n\nconst ProfileUpdate = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    username: '',\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    formData: ''\n  });\n  const token = getCookie('token');\n  const {\n    username,\n    name,\n    email,\n    password,\n    error,\n    success,\n    loading,\n    photo,\n    formData\n  } = values;\n\n  const loadMemberProfile = () => {\n    getProfile(token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          username: data.username,\n          name: data.name,\n          email: data.email\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadMemberProfile();\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"image\"), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, JSON.stringify({\n    username,\n    email,\n    name\n  })))));\n};\n\nexport default ProfileUpdate; //make req to backend to get member info\n//populated in form","map":{"version":3,"sources":["D:/journalProject/frontend/components/Profile/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isLoggedIn","getProfile","updateProfile","ProfileUpdate","values","setValues","username","name","email","password","error","success","loading","photo","formData","token","loadMemberProfile","then","data","JSON","stringify"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,SAAR,EAAkBC,UAAlB,QAAmC,4BAAnC;AACA,SAAQC,UAAR,EAAmBC,aAAnB,QAAuC,sBAAvC;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAC3B,QAAM;AAAA,OAACC,MAAD;AAAA,OAAQC;AAAR,MAAqBT,QAAQ,CAAC;AACnCU,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAC,EAH6B;AAInCC,IAAAA,QAAQ,EAAC,EAJ0B;AAKnCC,IAAAA,KAAK,EAAE,KAL4B;AAMnCC,IAAAA,OAAO,EAAE,KAN0B;AAOnCC,IAAAA,OAAO,EAAE,KAP0B;AAQnCC,IAAAA,KAAK,EAAC,EAR6B;AASnCC,IAAAA,QAAQ,EAAE;AATyB,GAAD,CAAnC;AAYA,QAAMC,KAAK,GAAGhB,SAAS,CAAC,OAAD,CAAvB;AACA,QAAM;AAACO,IAAAA,QAAD;AAAUC,IAAAA,IAAV;AAAeC,IAAAA,KAAf;AAAqBC,IAAAA,QAArB;AAA8BC,IAAAA,KAA9B;AAAoCC,IAAAA,OAApC;AAA4CC,IAAAA,OAA5C;AAAoDC,IAAAA,KAApD;AAA0DC,IAAAA;AAA1D,MAAsEV,MAA5E;;AAEA,QAAMY,iBAAiB,GAAG,MAAM;AAC/Bf,IAAAA,UAAU,CAACc,KAAD,CAAV,CAAkBE,IAAlB,CAAuBC,IAAI,IAAE;AAC5B,UAAGA,IAAI,CAACR,KAAR,EAAgB;AACfL,QAAAA,SAAS,mBAAKD,MAAL;AAAYM,UAAAA,KAAK,EAAEQ,IAAI,CAACR;AAAxB,WAAT;AACA,OAFD,MAEO;AACNL,QAAAA,SAAS,mBAAKD,MAAL;AAAYE,UAAAA,QAAQ,EAAEY,IAAI,CAACZ,QAA3B;AAAoCC,UAAAA,IAAI,EAAEW,IAAI,CAACX,IAA/C;AAAoDC,UAAAA,KAAK,EAAEU,IAAI,CAACV;AAAhE,WAAT;AACA;AAED,KAPD;AAQA,GATD;;AAWAX,EAAAA,SAAS,CAAC,MAAI;AACbmB,IAAAA,iBAAiB;AACjB,GAFQ,EAEP,EAFO,CAAT;AAIA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAIC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,IAAI,CAACC,SAAL,CAAe;AAACd,IAAAA,QAAD;AAAUE,IAAAA,KAAV;AAAgBD,IAAAA;AAAhB,GAAf,CADF,CAJD,CADD,CADD,CADD;AAeA,CA9CD;;AAiDA,eAAeJ,aAAf,C,CAEA;AACA","sourcesContent":["import Link from 'next/link'\r\nimport {useState,useEffect} from 'react'\r\nimport Router from 'next/router'\r\nimport {getCookie,isLoggedIn} from '../../actions/handleCookie'\r\nimport {getProfile,updateProfile} from '../../actions/member'\r\n\r\n\r\nconst ProfileUpdate = () => {\r\n\tconst [values,setValues] = useState({\r\n\t\tusername: '',\r\n\t\tname: '',\r\n\t\temail:'',\r\n\t\tpassword:'',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tloading: false,\r\n\t\tphoto:'',\r\n\t\tformData: '' \r\n\t})\t\r\n\r\n\tconst token = getCookie('token')\r\n\tconst {username,name,email,password,error,success,loading,photo,formData} = values\r\n\r\n\tconst loadMemberProfile = () => {\r\n\t\tgetProfile(token).then(data=>{\r\n\t\t\tif(data.error)  {\r\n\t\t\t\tsetValues({...values,error: data.error})\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({...values,username: data.username,name: data.name,email: data.email,})\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tloadMemberProfile()\r\n\t},[])\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\timage\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-8\">\r\n\t\t\t\t\t\t{JSON.stringify({username,email,name})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n\r\n}\r\n\r\n\r\nexport default ProfileUpdate\r\n\r\n//make req to backend to get member info\r\n//populated in form"]},"metadata":{},"sourceType":"module"}