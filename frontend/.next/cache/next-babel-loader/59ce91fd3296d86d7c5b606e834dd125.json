{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ducp1\\\\Desktop\\\\journalProject\\\\frontend\\\\components\\\\Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { isLoggedIn, getCookie } from '../actions/handleCookie';\nimport { createCategory, listCategory, deleteCategory } from '../actions/category';\n\nconst Category = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false,\n    isReload: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed,\n    isReload\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    //call when state is changed \n    loadCategories();\n  }, [isReload]); //localCategories is invoked only when reload change value\n  //load all categories when the page is mounted(lifecycle)\n\n  const loadCategories = () => {\n    listCategory().then(categories => {\n      if (categories.error) {\n        console.log(categories.error);\n      } else {\n        setValues(_objectSpread({}, values, {\n          categories: categories\n        }));\n      }\n    });\n  };\n\n  const showCategories = () => {\n    return categories.map((item, index) => {\n      return __jsx(\"button\", {\n        onDoubleClick: () => handleDelete(item.slug),\n        title: \"Double click to delete\",\n        key: index,\n        className: \"btn btn-outline-primary mr-1 ml-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, item.name);\n    });\n  };\n\n  const handleDelete = slug => {\n    let answer = window.confirm('Are you sure you want to delete this category?');\n\n    if (answer) {\n      deleteCategory(slug, token).then(result => {\n        if (result.error) {\n          console.log(result.error);\n        } else {\n          setValues(_objectSpread({}, values, {\n            error: false,\n            success: false,\n            removed: !removed,\n            isReload: true\n          }));\n        }\n      });\n    }\n  };\n\n  const deleteCategory = slug => {\n    console.log('delete,', slug);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    createCategory({\n      name\n    }, token).then(category => {\n      if (category.error) {\n        setValues(_objectSpread({}, values, {\n          error: category.error,\n          success: false\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          error: false,\n          success: false,\n          name: '',\n          isReload: true\n        }));\n      }\n    });\n  };\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      name: event.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  const newCategoryFom = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: handleChange,\n    value: name,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Create\")));\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, newCategoryFom(), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, showCategories()));\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/ducp1/Desktop/journalProject/frontend/components/Category.js"],"names":["useState","useEffect","Link","Router","isLoggedIn","getCookie","createCategory","listCategory","deleteCategory","Category","values","setValues","name","error","success","categories","removed","isReload","token","loadCategories","then","console","log","showCategories","map","item","index","handleDelete","slug","answer","window","confirm","result","handleSubmit","event","preventDefault","category","handleChange","target","value","newCategoryFom"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport { isLoggedIn, getCookie } from '../actions/handleCookie';\r\nimport { createCategory,listCategory,deleteCategory } from '../actions/category';\r\n\r\nconst Category = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        error: false,\r\n        success: false,\r\n        categories: [],\r\n        removed: false,\r\n        isReload: false\r\n    });\r\n\r\n    const { name, error, success, categories, removed,isReload } = values;\r\n    const token = getCookie('token');\r\n\r\n\r\n    useEffect(()=>{ //call when state is changed \r\n    \tloadCategories()\r\n    },[isReload])  //localCategories is invoked only when reload change value\r\n\r\n    //load all categories when the page is mounted(lifecycle)\r\n    const loadCategories = () => {\r\n    \tlistCategory().then(categories=>{\r\n    \t\tif(categories.error){\r\n    \t\t\tconsole.log(categories.error)\r\n    \t\t} else {\r\n    \t\t\tsetValues({...values,categories: categories})\r\n    \t\t}\r\n    \t})\r\n    }\r\n\r\n    const showCategories = () => {\r\n    \treturn categories.map((item,index)=>{\r\n    \t\treturn(\r\n    \t\t  <button onDoubleClick={() => handleDelete(item.slug)}\r\n    \t\t   title=\"Double click to delete\" \r\n    \t\t   key={index} \r\n    \t\t   className=\"btn btn-outline-primary mr-1 ml-1 mt-3\">\r\n                    {item.name}\r\n               </button>\r\n               )\r\n    \t})\r\n    }\r\n\r\n    const handleDelete = slug => {\r\n    \tlet answer = window.confirm('Are you sure you want to delete this category?')\r\n    \tif (answer) {\r\n    \t\tdeleteCategory(slug,token).then(result=>{\r\n    \t\t\tif(result.error){\r\n    \t\t\t\tconsole.log(result.error)\r\n    \t\t\t} else {\r\n    \t\t\t\tsetValues({...values,error:false,success:false,removed: !removed,isReload: true})\r\n    \t\t\t}\r\n    \t\t})\r\n    \t}\r\n    }\r\n\r\n    const deleteCategory = slug  => {\r\n    \tconsole.log('delete,',slug)\r\n    }\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        createCategory({ name }, token).then(category => {\r\n            if (category.error) {\r\n                setValues({ ...values, error: category.error, success: false });\r\n            } else {\r\n                setValues({  ...values, error: false, success: false, name: '',isReload: true});\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleChange = event => {\r\n        setValues({ ...values, name: event.target.value, error: false, success: false, removed: '' });\r\n    };\r\n\r\n    const newCategoryFom = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Create\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return <React.Fragment>\r\n    \t\t{newCategoryFom()}\r\n    \t\t<div>\r\n    \t\t\t{showCategories()}\r\n    \t\t</div>\r\n    \t</React.Fragment>;\r\n};\r\n\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}