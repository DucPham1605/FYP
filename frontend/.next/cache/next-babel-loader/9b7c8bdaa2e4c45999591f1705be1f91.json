{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const listJournals = () => {\n  return fetch(`${API}/blogs-categories-tags`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n};\nexport const createJournal = (journal, token) => {\n  return fetch(`${API}/journal`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: journal\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n};","map":{"version":3,"sources":["C:/Users/ducp1/Desktop/journalProject/frontend/actions/journal.js"],"names":["fetch","API","listJournals","method","headers","Accept","then","response","json","catch","error","console","log","createJournal","journal","token","Authorization","body"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAOF,KAAK,CAAE,GAAEC,GAAI,wBAAR,EAAiC;AACzCE,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAFgC,GAAjC,CAAL,CAMFC,IANE,CAMGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GARE,EASFC,KATE,CASIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CATb,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMG,aAAa,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7C,SAAOf,KAAK,CAAE,GAAEC,GAAI,UAAR,EAAmB;AAC3BE,IAAAA,MAAM,EAAE,MADmB;AAE3BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAELW,MAAAA,aAAa,EAAG,UAASD,KAAM;AAF1B,KAFkB;AAM3BE,IAAAA,IAAI,EAAEH;AANqB,GAAnB,CAAL,CAQFR,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXb,CAAP;AAYH,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listJournals = () => {\r\n    return fetch(`${API}/blogs-categories-tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json'\r\n        },\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};\r\n\r\nexport const createJournal = (journal, token) => {\r\n    return fetch(`${API}/journal`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: journal\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(error => console.log(error));\r\n};"]},"metadata":{},"sourceType":"module"}