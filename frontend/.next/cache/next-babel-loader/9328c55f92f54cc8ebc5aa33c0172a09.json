{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\components\\\\Profile\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isLoggedIn } from '../../actions/handleCookie';\nimport { getProfile, updateProfile } from '../../actions/member';\nimport { API } from '../../config.js';\nimport { updateMember } from '../../actions/auth';\nimport Layout from '../../components/Layout';\n\nvar ProfileUpdate = function ProfileUpdate() {\n  var _useState = useState({\n    username: '',\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false,\n    photo: '',\n    about: '',\n    formData: '',\n    usernameForPhoto: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var token = getCookie('token');\n  var username = values.username,\n      name = values.name,\n      email = values.email,\n      password = values.password,\n      error = values.error,\n      success = values.success,\n      photo = values.photo,\n      formData = values.formData,\n      about = values.about,\n      usernameForPhoto = values.usernameForPhoto;\n\n  var loadMemberProfile = function loadMemberProfile() {\n    getProfile(token).then(function (data) {\n      console.log(data);\n\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about,\n          usernameForPhoto: data.username,\n          formData: new FormData()\n        }));\n      }\n    });\n  };\n\n  useEffect(function () {\n    loadMemberProfile();\n  }, []);\n\n  var setData = function setData() {\n    formData.set(\"username\", username);\n    formData.set(\"name\", name);\n    formData.set(\"email\", email);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setData();\n    updateProfile(token, formData).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          success: false\n        }));\n      } else {\n        updateMember(data, function () {\n          setValues(_objectSpread({}, values, {\n            username: data.username,\n            name: data.name,\n            email: data.email,\n            about: data.about,\n            formData: new FormData(),\n            success: true\n          }));\n        });\n      }\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      var _objectSpread2;\n\n      var value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      formData.set(name, value);\n      setValues(_objectSpread({}, values, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"formData\", formData), _defineProperty(_objectSpread2, \"error\", false), _defineProperty(_objectSpread2, \"success\", false), _objectSpread2)));\n    };\n  };\n\n  var showProfileForm = function showProfileForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"btn btn-outline-info mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Profile Photo\", __jsx(\"input\", {\n      onChange: handleChange('photo'),\n      type: \"file\",\n      accept: \"images/*\",\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Name\"), __jsx(\"input\", {\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Username\"), __jsx(\"input\", {\n      onChange: handleChange('username'),\n      type: \"text\",\n      className: \"form-control\",\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Email\"), __jsx(\"input\", {\n      onChange: handleChange('email'),\n      type: \"text\",\n      className: \"form-control\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"About\"), __jsx(\"textarea\", {\n      onChange: handleChange('about'),\n      type: \"text\",\n      className: \"form-control\",\n      value: about,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Submit\"));\n  };\n\n  var showStatus = function showStatus() {\n    if (error) {\n      return __jsx(\"div\", {\n        className: \"alert alert-danger pb-2 pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, error);\n    } else if (success === true) {\n      return __jsx(\"div\", {\n        className: \"alert alert-success pb-2 pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Updated Successfully\");\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"\".concat(API, \"/member/photo/\").concat(usernameForPhoto),\n    className: \"img img-fluid profile-picture\",\n    style: {\n      maxHeight: 'auto',\n      maxWidth: '100%'\n    },\n    alt: \"user profile picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"col-md-8 mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, showStatus(), showProfileForm()))));\n};\n\nexport default ProfileUpdate; //make req to backend to get member info\n//populated in form","map":{"version":3,"sources":["D:/journalProject/frontend/components/Profile/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isLoggedIn","getProfile","updateProfile","API","updateMember","Layout","ProfileUpdate","username","name","email","password","error","success","photo","about","formData","usernameForPhoto","values","setValues","token","loadMemberProfile","then","data","console","log","FormData","setData","set","handleSubmit","event","preventDefault","handleChange","value","target","files","showProfileForm","showStatus","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport {useState,useEffect} from 'react'\r\nimport Router from 'next/router'\r\nimport {getCookie,isLoggedIn} from '../../actions/handleCookie'\r\nimport {getProfile,updateProfile} from '../../actions/member'\r\nimport {API} from '../../config.js'\r\nimport {updateMember} from '../../actions/auth'\r\nimport Layout from '../../components/Layout'\r\n\r\n\r\nconst ProfileUpdate = () => {\r\n\tconst [values,setValues] = useState({\r\n\t\tusername: '',\r\n\t\tname: '',\r\n\t\temail:'',\r\n\t\tpassword:'',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tphoto:'',\r\n\t\tabout:'',\r\n\t\tformData: '',\r\n\t\tusernameForPhoto: '' \r\n\t})\t\r\n\r\n\tconst token = getCookie('token')\r\n\tconst {username,name,email,password,error,success,photo,formData,about,usernameForPhoto} = values\r\n\r\n\tconst loadMemberProfile = () => {\r\n\t\tgetProfile(token).then(data=>{\r\n\t\t\tconsole.log(data)\r\n\t\t\tif(data.error)  {\r\n\t\t\t\tsetValues({...values,error: data.error})\r\n\t\t\t} else { \r\n\t\t\t\tsetValues({...values,username: data.username,name: data.name,email: data.email,about: data.about,usernameForPhoto: data.username,formData: new FormData()})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tloadMemberProfile()\r\n\t},[])\r\n\r\n\tconst setData = () => {\r\n\t\tformData.set(\"username\",username)\r\n\t\tformData.set(\"name\",name)\r\n\t\tformData.set(\"email\",email)\r\n\t}\r\n\r\n\tconst handleSubmit = event => {\r\n\t\tevent.preventDefault()\r\n\t\tsetData()\r\n\t\tupdateProfile(token,formData).then(data=>{\r\n\t\t\tif(data.error){\r\n\t\t\t\tsetValues({...values,error: data.error,success: false})\r\n\t\t\t} else {\r\n\t\t\t\tupdateMember(data,()=>{\r\n\t\t\t\t\tsetValues({...values,username: data.username,name: data.name,email: data.email,about: data.about, formData: new FormData(),success:true })\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleChange = name => event => {\r\n\t\tconst value = name === \"photo\" ? event.target.files[0] : event.target.value\r\n\t\tformData.set(name,value)\r\n\t\tsetValues({...values,[name]:value,formData,error: false,success:false})\r\n\t}\r\n\r\n\tconst showProfileForm = () => {\r\n\t\treturn <form onSubmit={handleSubmit}>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"btn btn-outline-info mt-2\">\r\n\t\t\t\t\tProfile Photo\r\n\t       \t\t\t<input onChange={handleChange('photo')} type=\"file\" accept=\"images/*\" hidden/> \r\n\t   \t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"text-muted\">Name</label>\r\n\t\t\t\t<input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"text-muted\">Username</label>\r\n\t\t\t\t<input onChange={handleChange('username')} type=\"text\" className=\"form-control\" value={username}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"text-muted\">Email</label>\r\n\t\t\t\t<input onChange={handleChange('email')} type=\"text\" className=\"form-control\" value={email}/>\r\n\t\t\t</div>\r\n{/*\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"text-muted\">Password</label>\r\n\t\t\t\t<input onChange={handleChange('password')} type=\"text\" className=\"form-control\"/>\r\n\t\t\t</div>*/}\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"text-muted\">About</label>\r\n\t\t\t\t<textarea onChange={handleChange('about')} type=\"text\" className=\"form-control\" value={about} />\r\n\t\t\t</div>\r\n\t\t\t<button  className=\"btn btn-primary\">Submit</button>\r\n\r\n\t\t</form>\r\n\t}\r\n\r\n\tconst showStatus = () => {\r\n\t\tif(error){\r\n\t\t\treturn <div className=\"alert alert-danger pb-2 pt-2\">{error}</div>\r\n\t\t} else if(success === true){\r\n\t\t\treturn <div className=\"alert alert-success pb-2 pt-2\">Updated Successfully</div>\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\tsrc={`${API}/member/photo/${usernameForPhoto}`} \r\n\t\t\t\t\t\t\tclassName=\"img img-fluid profile-picture\"\r\n\t\t\t\t\t\t\tstyle={{maxHeight: 'auto',maxWidth: '100%'}}\r\n\t\t\t\t\t\t\talt=\"user profile picture\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-8 mb-5\">\r\n\t\t\t\t\t\t{showStatus()}\r\n\t\t\t\t\t\t{showProfileForm()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n\r\n}\r\n\r\nexport default ProfileUpdate\r\n\r\n//make req to backend to get member info\r\n//populated in form"]},"metadata":{},"sourceType":"module"}