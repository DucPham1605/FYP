{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\components\\\\Profile\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isLoggedIn } from '../../actions/handleCookie';\nimport { getProfile, updateProfile } from '../../actions/member';\n\nvar ProfileUpdate = function ProfileUpdate() {\n  var _useState = useState({\n    username: '',\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    formData: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var token = getCookie('token');\n  var username = values.username,\n      name = values.name,\n      email = values.email,\n      password = values.password,\n      error = values.error,\n      success = values.success,\n      loading = values.loading,\n      photo = values.photo,\n      formData = values.formData;\n\n  var loadMemberProfile = function loadMemberProfile() {\n    getProfile(token).then(function (data) {\n      console.log(data);\n\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          username: data.username,\n          name: data.name,\n          email: data.email\n        }));\n      }\n    });\n  };\n\n  useEffect(function () {\n    loadMemberProfile();\n  }, []); //currying function\n\n  var handleChange = name = (_readOnlyError(\"name\"), function (event) {//\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n  };\n\n  var showProfileForm = function showProfileForm() {\n    __jsx(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Profile Photo\"), __jsx(\"input\", {\n      onChange: handleChange('photo'),\n      type: \"file\",\n      accept: \"image/*\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"image\"), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, _JSON$stringify({\n    username: username,\n    email: email,\n    name: name\n  })))));\n};\n\nexport default ProfileUpdate; //make req to backend to get member info\n//populated in form","map":{"version":3,"sources":["D:/journalProject/frontend/components/Profile/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isLoggedIn","getProfile","updateProfile","ProfileUpdate","username","name","email","password","error","success","loading","photo","formData","values","setValues","token","loadMemberProfile","then","data","console","log","handleChange","event","handleSubmit","preventDefault","showProfileForm"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport {useState,useEffect} from 'react'\r\nimport Router from 'next/router'\r\nimport {getCookie,isLoggedIn} from '../../actions/handleCookie'\r\nimport {getProfile,updateProfile} from '../../actions/member'\r\n\r\n\r\nconst ProfileUpdate = () => {\r\n\tconst [values,setValues] = useState({\r\n\t\tusername: '',\r\n\t\tname: '',\r\n\t\temail:'',\r\n\t\tpassword:'',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tloading: false,\r\n\t\tphoto:'',\r\n\t\tformData: '' \r\n\t})\t\r\n\r\n\tconst token = getCookie('token')\r\n\tconst {username,name,email,password,error,success,loading,photo,formData} = values\r\n\r\n\tconst loadMemberProfile = () => {\r\n\t\tgetProfile(token).then(data=>{\r\n\t\t\tconsole.log(data)\r\n\t\t\tif(data.error)  {\r\n\t\t\t\tsetValues({...values,error: data.error})\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({...values,username: data.username,name: data.name,email: data.email,})\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tloadMemberProfile()\r\n\t},[])\r\n\r\n\t//currying function\r\n\tconst handleChange = name = event => {\r\n\t\t//\r\n\t}\r\n\r\n\tconst handleSubmit = event => {\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\tconst showProfileForm = () => {\r\n\t\t<form>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label className=\"text-muted\">Profile Photo</label>\r\n\t\t\t\t<input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" className=\"form-control\"/>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\timage\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-8\">\r\n\t\t\t\t\t\t{JSON.stringify({username,email,name})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n\r\n}\r\n\r\n\r\nexport default ProfileUpdate\r\n\r\n//make req to backend to get member info\r\n//populated in form"]},"metadata":{},"sourceType":"module"}