{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ducp1\\\\Desktop\\\\journalProject\\\\frontend\\\\components\\\\Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { isLoggedIn, getCookie } from '../actions/handleCookie';\nimport { createCategory, listCategory, deleteCategory } from '../actions/category';\n\nconst Category = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    categories: [],\n    isReload: false\n  });\n  const {\n    name,\n    error,\n    categories,\n    isReload\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    //call when state is changed \n    loadCategories();\n  }, [isReload]); //localCategories is invoked only when reload change value\n  //load all categories when the page is mounted(lifecycle)\n\n  const loadCategories = () => {\n    listCategory().then(categories => {\n      if (categories.error) {\n        console.log(categories.error);\n      } else {\n        setValues(_objectSpread({}, values, {\n          categories: categories\n        }));\n      }\n    });\n  };\n\n  const showCategories = () => {\n    return categories.map((item, index) => {\n      return __jsx(\"button\", {\n        onDoubleClick: () => handleDelete(item.slug),\n        title: \"Double click to delete\",\n        key: index,\n        className: \"btn btn-outline-primary mr-1 ml-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, item.name);\n    });\n  };\n\n  const handleDelete = slug => {\n    let answer = window.confirm('Are you sure you want to delete this category?');\n\n    if (answer) {\n      deleteCategory(slug, token).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setValues(_objectSpread({}, values, {\n            error: false,\n            name: '',\n            isReload: !isReload\n          }));\n        }\n      });\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    createCategory({\n      name\n    }, token).then(category => {\n      if (category.error) {\n        setValues(_objectSpread({}, values, {\n          error: category.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          error: false,\n          name: '',\n          isReload: !isReload\n        }));\n      }\n    });\n  };\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      name: event.target.value,\n      error: false,\n      removed: ''\n    }));\n  };\n\n  const showDupplicationError = () => {\n    if (error) {\n      return __jsx(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Category already existed\");\n    }\n  };\n\n  const removeMessage = () => {\n    setValues(_objectSpread({}, values, {\n      error: false\n    }));\n  };\n\n  const newCategoryForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: handleChange,\n    value: name,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Create\")));\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Categories\"), showDupplicationError(), __jsx(\"div\", {\n    onClick: removeMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, newCategoryForm(), showCategories()));\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/ducp1/Desktop/journalProject/frontend/components/Category.js"],"names":["useState","useEffect","Link","Router","isLoggedIn","getCookie","createCategory","listCategory","deleteCategory","Category","values","setValues","name","error","categories","isReload","token","loadCategories","then","console","log","showCategories","map","item","index","handleDelete","slug","answer","window","confirm","data","handleSubmit","event","preventDefault","category","handleChange","target","value","removed","showDupplicationError","removeMessage","newCategoryForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport { isLoggedIn, getCookie } from '../actions/handleCookie';\r\nimport { createCategory,listCategory,deleteCategory } from '../actions/category';\r\n\r\nconst Category = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        error: false,\r\n        categories: [],\r\n        isReload: false\r\n    });\r\n\r\n    const { name, error, categories,isReload } = values;\r\n    const token = getCookie('token');\r\n\r\n\r\n    useEffect(()=>{ //call when state is changed \r\n    \tloadCategories()\r\n    },[isReload])  //localCategories is invoked only when reload change value\r\n\r\n    //load all categories when the page is mounted(lifecycle)\r\n    const loadCategories = () => {\r\n    \tlistCategory().then(categories=>{\r\n    \t\tif(categories.error){\r\n    \t\t\tconsole.log(categories.error)\r\n    \t\t} else {\r\n    \t\t\tsetValues({...values,categories: categories})\r\n    \t\t}\r\n    \t})\r\n    }\r\n\r\n    const showCategories = () => {\r\n    \treturn categories.map((item,index)=>{\r\n    \t\treturn(\r\n    \t\t  <button onDoubleClick={() => handleDelete(item.slug)}\r\n    \t\t   title=\"Double click to delete\" \r\n    \t\t   key={index} \r\n    \t\t   className=\"btn btn-outline-primary mr-1 ml-1 mt-3\">\r\n                    {item.name}\r\n               </button>\r\n               )\r\n    \t})\r\n    }\r\n\r\n    const handleDelete = slug => {\r\n    \tlet answer = window.confirm('Are you sure you want to delete this category?')\r\n    \tif (answer) {\r\n    \t\tdeleteCategory(slug, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setValues({ ...values, error: false, name: '', isReload: !isReload });\r\n            }\r\n        });\r\n    \t}\r\n    }\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        createCategory({ name }, token).then(category => {\r\n            if (category.error) {\r\n                setValues({ ...values, error: category.error });\r\n            } else {\r\n                setValues({  ...values, error: false, name: '',isReload: !isReload});\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleChange = event => {\r\n        setValues({ ...values, name: event.target.value, error: false, removed: '' });\r\n    };\r\n\r\n    const showDupplicationError = () => {\r\n    \tif(error){\r\n    \t\treturn <p className=\"text-danger\">Category already existed</p>\r\n    \t}\r\n    }\r\n\r\n    const removeMessage = () => {\r\n    \tsetValues({ ...values,error: false});\r\n    }\r\n\r\n    const newCategoryForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Create\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return <React.Fragment>\r\n            <h3>Categories</h3>\r\n    \t\t{showDupplicationError()}\r\n    \t\t\r\n    \t\t<div onClick={removeMessage}> \r\n    \t\t\t{newCategoryForm()}\r\n    \t\t\t{showCategories()}\r\n    \t\t</div>\r\n    \t</React.Fragment>;\r\n};\r\n\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}