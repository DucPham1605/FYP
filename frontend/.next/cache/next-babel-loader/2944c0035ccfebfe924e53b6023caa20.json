{"ast":null,"code":"var _jsxFileName = \"D:\\\\journalProject\\\\frontend\\\\pages\\\\member\\\\account-validate\\\\[token].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../../../components/Layout';\nimport { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { register, login } from '../../../actions/auth';\nimport { withRouter } from 'next/router';\nimport Router from 'next/router';\nimport { authenticate, isLoggedIn } from '../../../actions/handleCookie';\n\nconst AccountValidation = ({\n  router\n}) => {\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const logIn = member => {\n    login(member).then(member => {\n      if (member.error) {\n        setValues(_objectSpread({}, values, {\n          error: member.error,\n          loading: false\n        }));\n        console.log(message.error);\n      } else {\n        authenticate(member, () => {\n          if (isLoggedIn() && isLoggedIn().role === 'admin') {\n            Router.push(`/admin`);\n          } else {\n            Router.push(`/member`);\n          }\n        });\n      }\n    });\n  };\n\n  const registerMember = () => {\n    const accountValidationLink = router.query.token;\n    register({\n      accountValidationLink\n    }).then(data => {\n      if (data.error) {\n        alert(data.error);\n      } else {\n        const {\n          email,\n          password\n        } = data;\n        let member = {\n          email,\n          password\n        };\n        logIn(member);\n      }\n    });\n  };\n\n  const showForm = () => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"primary\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Activate your account\"), __jsx(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(ModalHeader, {\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Welcome to Everly\"), __jsx(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Be ready to journaling your journey\"), __jsx(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Button, {\n      className: \"text center\",\n      color: \"primary\",\n      onClick: registerMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Click here to to log in\"))));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"mt-2 mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Ready to activate your account ?\"), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), showForm()));\n};\n\nexport default withRouter(AccountValidation); //onclick => register account","map":{"version":3,"sources":["D:/journalProject/frontend/pages/member/account-validate/[token].js"],"names":["Layout","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","register","login","withRouter","Router","authenticate","isLoggedIn","AccountValidation","router","modal","setModal","toggle","logIn","member","then","error","setValues","values","loading","console","log","message","role","push","registerMember","accountValidationLink","query","token","data","alert","email","password","showForm"],"mappings":"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","sourcesContent":["import Layout from '../../../components/Layout'\r\nimport {useState} from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport {register,login} from '../../../actions/auth'\r\nimport {withRouter} from 'next/router'\r\nimport Router from 'next/router'\r\nimport {authenticate,isLoggedIn} from '../../../actions/handleCookie'\r\n\r\nconst AccountValidation = ({router}) => {\r\n\r\nconst [modal, setModal] = useState(false);\r\n\r\nconst toggle = () => setModal(!modal);\r\n\r\nconst logIn = member => {\r\n         login(member).then(member => {\r\n            if (member.error) {\r\n                setValues({ ...values, error: member.error, loading: false });\r\n                console.log(message.error)\r\n            } else {\r\n              authenticate(member, () => {\r\n                if(isLoggedIn() && isLoggedIn().role ==='admin'){\r\n                  Router.push(`/admin`)\r\n                } else {\r\n                  Router.push(`/member`)\r\n                }\r\n              })\r\n            }\r\n        });\r\n}\r\n\r\nconst registerMember = () => {\r\n  const accountValidationLink = router.query.token\r\n  register({accountValidationLink}).then(data=>{\r\n    if(data.error){ \r\n      alert(data.error)\r\n    } else {\r\n      const {email,password} = data\r\n      let member = {email,password}\r\n      logIn(member)\r\n    }\r\n  })\r\n}\r\n\r\nconst showForm = () => {\r\n\treturn (\r\n\t   <div>\r\n      <Button color=\"primary\" onClick={toggle}>Activate your account</Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Welcome to Everly</ModalHeader>\r\n        <ModalBody>\r\n          Be ready to journaling your journey\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"text center\" color=\"primary\" onClick={registerMember}>Click here to to log in</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n\t)\r\n}\r\n\r\n return (\r\n \t<Layout>\r\n \t\t<div className=\"text-center\">\r\n\t \t\t<h1 className=\"mt-2 mb-2\">Ready to activate your account ?</h1>\r\n\t \t\t<hr/>\r\n\t \t\t{showForm()}\r\n \t\t</div>\r\n \t</Layout>\r\n )\r\n}\r\n\r\nexport default withRouter(AccountValidation)\r\n\r\n//onclick => register account"]},"metadata":{},"sourceType":"module"}